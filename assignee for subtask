def issueKey = issue.key
logger.info("Issue Key: " + issueKey)

def issuetype = issue.fields.issuetype.name
def offices = issue.fields.customfield_10246?.value?.join(", ") // Use safe navigation operator for null safety
def parentAssigneeId = issue.fields.assignee?.accountId

// Iterate over the changelog items
for (item in changelog.items) {
    // Check if the field is 'assignee'
    if (item.field == "assignee") {
        if (issuetype != "initiative" && offices == "Hyd") {
            // Get subtasks of the current issue
            def subtasks = issue.fields.subtasks
            for (subtask in subtasks) {
                def subtaskKey = subtask.key
                // Update the assignee of the subtask to match the parent issue's assignee
                def updateResult = put("/rest/api/3/issue/${subtaskKey}/assignee")
                    .header('Content-Type', 'application/json')
                    .body([
                        accountId: parentAssigneeId
                    ])
                    .asString()
                
                if (updateResult.status == 204) {
                    logger.info("Assignee updated successfully for subtask: ${subtaskKey}")
                } else {
                    logger.error("Failed to update assignee for subtask ${subtaskKey}: " + updateResult.body)
                }
            }
        }
    }
}
